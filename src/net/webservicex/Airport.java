//
// Generated By:JAX-WS RI IBM 2.2.1-11/28/2011 08:28 AM(foreman)- (JAXB RI IBM 2.2.3-11/28/2011 06:21 AM(foreman)-)
//


package net.webservicex;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

@WebServiceClient(name = "airport", targetNamespace = "http://www.webserviceX.NET", wsdlLocation = "WEB-INF/wsdl/airbus.wsdl")
public class Airport
    extends Service
{

    private final static URL AIRPORT_WSDL_LOCATION;
    private final static WebServiceException AIRPORT_EXCEPTION;
    private final static QName AIRPORT_QNAME = new QName("http://www.webserviceX.NET", "airport");

    static {
            AIRPORT_WSDL_LOCATION = net.webservicex.Airport.class.getResource("/WEB-INF/wsdl/airbus.wsdl");
        WebServiceException e = null;
        if (AIRPORT_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'WEB-INF/wsdl/airbus.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        AIRPORT_EXCEPTION = e;
    }

    public Airport() {
        super(__getWsdlLocation(), AIRPORT_QNAME);
    }

    public Airport(WebServiceFeature... features) {
        super(__getWsdlLocation(), AIRPORT_QNAME, features);
    }

    public Airport(URL wsdlLocation) {
        super(wsdlLocation, AIRPORT_QNAME);
    }

    public Airport(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, AIRPORT_QNAME, features);
    }

    public Airport(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Airport(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns AirportSoap
     */
    @WebEndpoint(name = "airportSoap")
    public AirportSoap getAirportSoap() {
        return super.getPort(new QName("http://www.webserviceX.NET", "airportSoap"), AirportSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirportSoap
     */
    @WebEndpoint(name = "airportSoap")
    public AirportSoap getAirportSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.webserviceX.NET", "airportSoap"), AirportSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns AirportSoap
     */
    @WebEndpoint(name = "airportSoap12")
    public AirportSoap getAirportSoap12() {
        return super.getPort(new QName("http://www.webserviceX.NET", "airportSoap12"), AirportSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirportSoap
     */
    @WebEndpoint(name = "airportSoap12")
    public AirportSoap getAirportSoap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.webserviceX.NET", "airportSoap12"), AirportSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns AirportHttpGet
     */
    @WebEndpoint(name = "airportHttpGet")
    public AirportHttpGet getAirportHttpGet() {
        return super.getPort(new QName("http://www.webserviceX.NET", "airportHttpGet"), AirportHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirportHttpGet
     */
    @WebEndpoint(name = "airportHttpGet")
    public AirportHttpGet getAirportHttpGet(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.webserviceX.NET", "airportHttpGet"), AirportHttpGet.class, features);
    }

    /**
     * 
     * @return
     *     returns AirportHttpPost
     */
    @WebEndpoint(name = "airportHttpPost")
    public AirportHttpPost getAirportHttpPost() {
        return super.getPort(new QName("http://www.webserviceX.NET", "airportHttpPost"), AirportHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirportHttpPost
     */
    @WebEndpoint(name = "airportHttpPost")
    public AirportHttpPost getAirportHttpPost(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.webserviceX.NET", "airportHttpPost"), AirportHttpPost.class, features);
    }

    private static URL __getWsdlLocation() {
        if (AIRPORT_EXCEPTION!= null) {
            throw AIRPORT_EXCEPTION;
        }
        return AIRPORT_WSDL_LOCATION;
    }

}
